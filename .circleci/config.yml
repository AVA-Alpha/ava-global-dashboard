version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.11.2
  azure-acr: circleci/azure-acr@0.2.0

jobs:
  build-and-publish-docker-image-to-acr:
    - azure-acr/build-and-push-image:
          login-server-name: alphacontainerregistry.azurecr.io
          registry-name: alphacontainerregistry
          repo: ava-global-dashboard
          tag: $CIRCLE_TAG
  deploy:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - run:
          name: Install OpenVPN
          command: |
            sudo apt-get update
            sudo apt install apt-transport-https
            sudo wget https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub
            sudo apt-key add openvpn-repo-pkg-key.pub
            sudo wget -O /etc/apt/sources.list.d/openvpn3.list https://swupdate.openvpn.net/community/openvpn3/repos/openvpn3-xenial.list
            sudo apt update
            sudo apt-get install openvpn3 -y
            sudo apt-get install python3-pip
            sudo pip3 install aenum
            
      - run:
          name: VPN Setup
          background: true
          command: |
            echo $VPN_CLIENT_CONFIG | base64 --decode > /tmp/config.ovpn
            echo $VPN_PASSWORD | base64 --decode > /tmp/config.autoload
            sudo openvpn3-autoload --directory /tmp

      - run:
          name: Wait for the connection to be established
          command: sleep 30

      - run:
          name: Check IP after VPN connection
          command: |
            # ping 192.168.105.166

      - run:
          name: Run commands in our infrastructure
          command: |
            # A command
            # Another command
      
      - kubernetes/install-kubectl

      - kubernetes/install-kubeconfig:
          kubeconfig: KUBECONFIG_DATA
      
      - run: 
          name: Test kubectl
          command: |
            kubectl version --client
            kubectl get pods

      - run:
          name: Disconnect from OpenVPN
          command: sudo killall openvpn || true
          when: always

workflows:
  btd:
    jobs:
      - build-and-publish-docker-image-to-acr:
        context: ACR_CONFIG

      - deploy:
          context: VPN_CLIENT_CONFIG 